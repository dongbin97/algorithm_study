#include <stdio.h>
#include <vector>
#include <queue>
using namespace std;
#define MAX 4000000

typedef pair<int, int> pii;

struct comp {
	bool operator() (pii a, pii b) {
		return a.second > b.second;
	}
};

int V, E;
vector<pii> graph[20001];
priority_queue<pii, vector<pii>, comp> pq;
int dist[20001];

int main() {
	int start, a, b, c;

	scanf("%d %d", &V, &E);
	scanf("%d", &start);

	for (int i = 0; i < E; i++) {
		scanf("%d %d %d", &a, &b, &c);
		graph[a].push_back({ b,c });
	}

	for (int i = 1; i <= V; i++)
		dist[i] = MAX;

	dist[start] = 0;
	for (pii next : graph[start]) {
		pq.push(next);
	}
	
	while (!pq.empty()) {
		int u = pq.top().first;
		int cost = pq.top().second; pq.pop();
		if (dist[u] != MAX) continue;
		dist[u] = cost;
		for (pii next : graph[u]) {
			pq.push({ next.first,dist[u] + next.second });
		}
	}

	for (int i = 1; i <= V; i++) {
		if (dist[i] == MAX)
			printf("INF\n");
		else printf("%d\n", dist[i]);
	}

	return 0;
}
