#include <stdio.h>
#include <algorithm>
using namespace std;

int arr[100001], dp[5][5][100001], N = 0;
int cost[5][5] = { {0,2,2,2,2},{0,1,3,4,3}, {0,3,1,3,4},{0,4,3,1,3},{0,3,4,3,1} };

int solve(int left, int right, int idx) {
	if (dp[left][right][idx] > 0) return dp[left][right][idx];
	if (idx >=  N) return 0;

	dp[left][right][idx] = min(cost[left][arr[idx]] + solve(arr[idx], right, idx + 1), cost[right][arr[idx]] + solve(left, arr[idx], idx + 1));
	return dp[left][right][idx];
}

int main() {
	int n;
	while (1) {
		scanf("%d", &n);
		if (n == 0) break;
		arr[N++] = n;
	}

	printf("%d", solve(0, 0, 0));
	return 0;
}
