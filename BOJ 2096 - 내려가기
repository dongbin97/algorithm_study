#include <stdio.h>
#include <algorithm>
using namespace std;

int board[100000][3];
int temp[2][3];

int main() {
	int N, ans_max, ans_min;
	scanf("%d", &N);

	for (int i = 0; i < N; i++)
		for (int j = 0; j < 3; j++)
			scanf("%d", &board[i][j]);
	
	for (int j = 0; j < 3; j++)
		temp[(N - 1) % 2][j] = board[N - 1][j];

	for (int i = N - 2; i >= 0; i--) {
		temp[i % 2][0] = board[i][0] + max(temp[(i + 1) % 2][0], temp[(i + 1) % 2][1]);
		temp[i % 2][1] = board[i][1] + max(temp[(i + 1) % 2][0], max(temp[(i + 1) % 2][1], temp[(i + 1) % 2][2]));
		temp[i % 2][2] = board[i][2] + max(temp[(i + 1) % 2][1], temp[(i + 1) % 2][2]);
	}

	ans_max = max(temp[0][0], max(temp[0][1], temp[0][2]));
	
	for (int j = 0; j < 3; j++)
		temp[(N - 1) % 2][j] = board[N - 1][j];

	for (int i = N - 2; i >= 0; i--) {
		temp[i % 2][0] = board[i][0] + min(temp[(i + 1) % 2][0], temp[(i + 1) % 2][1]);
		temp[i % 2][1] = board[i][1] + min(temp[(i + 1) % 2][0], min(temp[(i + 1) % 2][1], temp[(i + 1) % 2][2]));
		temp[i % 2][2] = board[i][2] + min(temp[(i + 1) % 2][1], temp[(i + 1) % 2][2]);
	}

	ans_min = min(temp[0][0], min(temp[0][1], temp[0][2]));

	printf("%d %d", ans_max, ans_min);
	return 0;
}
