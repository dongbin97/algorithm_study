#include <stdio.h>
#include <vector>
#include <algorithm>
using namespace std;


int main() {
	int T, n, m, sum = 0;
	int A[1000], B[1000];
	vector<int> Asum, Bsum;

	scanf("%d", &T);
	scanf("%d", &n);
	for (int i = 0; i < n; i++)
		scanf("%d", &A[i]);
	scanf("%d", &m);
	for (int i = 0; i < m; i++)
		scanf("%d", &B[i]);

	for (int i = 0; i < n; i++) {
		sum = 0;
		for (int j = i; j < n; j++) {
			sum += A[j];
			Asum.push_back(sum);
		}
	}

	for (int i = 0; i < m; i++) {
		sum = 0;
		for (int j = i; j < m; j++) {
			sum += B[j];
			Bsum.push_back(sum);
		}
	}

	sort(Asum.begin(), Asum.end());
	sort(Bsum.begin(), Bsum.end());
	
	int Asize = Asum.size(), Bsize = Bsum.size();

	int i = 0, j = Bsize - 1, x;
	long long c1 = 1, c2 = 1, ans = 0;

	while (i < Asize && j >= 0) {
		x = Asum[i] + Bsum[j];
		if (x < T)i++;
		else if (x > T) j--;
		else {
			while (i + 1 < Asize && Asum[i] == Asum[i + 1]) {
				c1++; i++;
			}
			while (j - 1 >= 0 && Bsum[j] == Bsum[j - 1]) {
				c2++; j--;
			}
			ans = ans + (c1 * c2);
			c1 = 1, c2 = 1;
			i++;
		}
	}

	printf("%lld", ans);
	return 0;
}
