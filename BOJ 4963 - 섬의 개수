#include <stdio.h>
#include <vector>
using namespace std;

typedef struct {
	int row, col;
} coor;

int h, w, map[50][50];
int dx[] = { -1,-1,0,1,1,1,0,-1 }, dy[] = { 0,1,1,1,0,-1,-1,-1 };
vector<coor> island;
bool v[50][50];

void dfs(int row, int col) {
	v[row][col] = true;

	for (int i = 0; i < 8; i++) {
		int nrow = row + dx[i], ncol = col + dy[i];
		if (nrow < 0 || nrow >= h || ncol < 0 || ncol >= w) continue;
		if (v[nrow][ncol] || map[nrow][ncol] == 0) continue;
		dfs(nrow, ncol);
	}
}

int main() {
	while (1) {
		scanf("%d %d", &w, &h);
		if (w == 0 && h == 0) break;

		for (int i = 0; i < h; i++) {
			for (int j = 0; j < w; j++) {
				scanf("%d", &map[i][j]);
				if (map[i][j] == 1) island.push_back({ i,j });
			}
		}

		int cnt = 0;
		for (coor x : island) {
			if (v[x.row][x.col]) continue;
			dfs(x.row, x.col);
			cnt++;
		}

		printf("%d\n", cnt);

		for (int i = 0; i < h; i++)
			for (int j = 0; j < w; j++)
				v[i][j] = false;

		island.clear();
	}
}
