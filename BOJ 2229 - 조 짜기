#include <stdio.h>
#include <algorithm>
using namespace std;

int N, num[1000], maximum[1000][1000], minimum[1000][1000], dp[1000][1000];

int get(int start, int end) {
	if (start >= end) return dp[start][end] = 0;
	else if (dp[start][end] >= 0) return dp[start][end];

	dp[start][end] = maximum[start][end] - minimum[start][end];
	for (int i = start; i < end; i++)
		dp[start][end] = max(dp[start][end], get(start, i) + get(i + 1, end));

	return dp[start][end];
}

int main() {
	scanf("%d", &N);
	for (int i = 0; i < N; i++)
		scanf("%d", &num[i]);

	for (int i = 0; i < N; i++) {
		maximum[i][i] = num[i];
		minimum[i][i] = num[i];
		for (int j = i + 1; j < N; j++) {
			maximum[i][j] = max(maximum[i][j - 1], num[j]);
			minimum[i][j] = min(minimum[i][j - 1], num[j]);
		}
	}

	for (int i = 0; i < N; i++)
		for (int j = 0; j < N; j++)
			dp[i][j] = -1;
	
	printf("%d", get(0, N - 1));
}
