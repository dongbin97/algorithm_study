#include <stdio.h>
#include <queue>
using namespace std;

typedef struct {
	int to, cost;
}st;

struct comp {
	bool operator()(st a, st b) {
		return a.cost > b.cost;
	}
};

int N, W[301], P[301][301];
vector<st> graph[301];
priority_queue<st, vector<st>, comp> pq;
bool used[301];

int main() {
	scanf("%d", &N);
	for (int i = 1; i <= N; i++) {
		scanf("%d", &W[i]);
		graph[0].push_back({ i,W[i] });
		graph[i].push_back({ 0,W[i] });
	}

	for (int i = 1; i <= N; i++) {
		for (int j = 1; j <= N; j++) {
			scanf("%d", &P[i][j]);

			if (i == j) continue;
			graph[i].push_back({ j,P[i][j] });
		}
	}

	used[0] = true;
	for (st x : graph[0]) pq.push(x);

	int cnt = 0, cost = 0;
	while (cnt < N) {
		st e = pq.top(); pq.pop();
		if (used[e.to]) continue;
		used[e.to] = true;
		cnt++;
		cost += e.cost;

		for (st x : graph[e.to]) {
			if (used[x.to]) continue;
			pq.push(x);
		}
	}

	printf("%d", cost);
}
