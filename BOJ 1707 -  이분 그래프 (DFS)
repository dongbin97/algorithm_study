#include <stdio.h>
#include <vector>
using namespace std;
#define MAX 20001

vector<int> graph[MAX];
int visited[MAX] = { 0, };
int V;

void DFS(int u, int color) {
	visited[u] = color;
	int size = graph[u].size(), x;
	for (int i = 0; i < size; i++) {
		x = graph[u][i];
		if (visited[x] > 0) continue;
		DFS(x, 3 - color);
	}
}

int main() {
	int K, E, a, b, i;
	scanf("%d", &K);
	while (K--) {
		scanf("%d %d", &V, &E);

		for (i = 0; i < E; i++) {
			scanf("%d %d", &a, &b);
			graph[a].push_back(b);
			graph[b].push_back(a);
		}

		for (i = 1; i <= V; i++) {
			if (visited[i] == 0)
				DFS(i, 1);
		}

		bool flag = true;
		for (int u = 1; u <= V; u++) {
			int size = graph[u].size(), x;
			for (int i = 0; i < size; i++) {
				x = graph[u][i];
				if (visited[x] == visited[u]) {
					flag = false;
					break;
				}
			}
			if (!flag) break;
		}

		if (flag) printf("YES\n");
		else printf("NO\n");

		for (i = 1; i <= V; i++) {
			graph[i].clear();
			visited[i] = 0;
		}	
	}

	return 0;
}
