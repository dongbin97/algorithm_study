#include <stdio.h>

int N, K, light[200];
int dp[200][200]; 
//dp[start][end] : start~end 구간의 색을 모두 num[start]로 비꾸는데 걸리는 최소 변경횟수
//맨 왼쪽의 색으로 통일하더라고 일반성을 잃지 않음
//어차피 뒤집는 횟수는 동일

int recur(int start, int end) {
	if (start > end) return 0;
	if (start == end) return 0;
	if (dp[start][end] >= 0) return dp[start][end];
	if (start + 1 == end) {
		dp[start][end] = (light[start] == light[end]) ? 0 : 1;
		return dp[start][end];
	}

	for (int i = start; i <= end - 1; i++) {
		int res = recur(start, i) + recur(i + 1, end) + ((light[start] == light[i + 1]) ? 0 : 1);
		if (dp[start][end] == -1 || res < dp[start][end])
			dp[start][end] = res;
	}

	return dp[start][end];
}
int main() {
	scanf("%d %d", &N, &K);
	for (int i = 0; i < N; i++)
		scanf("%d", &light[i]);

	for (int i = 0; i < N; i++)
		for (int j = 0; j < N; j++)
			dp[i][j] = -1;
	printf("%d", recur(0, N - 1));
	return 0;
}
