#include <stdio.h>
#include <queue>
#include <stack>
using namespace std;

#define SIZE 100001

int visited[SIZE] = { 0, };
int parent[SIZE];
int N, K;
queue<int> q;
stack<int> path;

int main() {
	scanf("%d %d", &N, &K);

	visited[N] = 1;
	parent[N] = -1;
	q.push(N);
	while (!q.empty()) {
		int x = q.front(); q.pop();
		if (x == K) break;

		if (x - 1 == K || x + 1 == K || 2 * x == K) {
			visited[K] = visited[x] + 1;
			parent[K] = x;
			break;
		}

		if (x - 1 >= 0 && visited[x - 1] == 0) {
			visited[x - 1] = visited[x] + 1;
			parent[x - 1] = x;
			q.push(x - 1);
		}

		if (x + 1 < SIZE && visited[x + 1] == 0) {
			visited[x + 1] = visited[x] + 1;
			parent[x + 1] = x;
			q.push(x + 1);
		}

		if (2 * x < SIZE && visited[2 * x] == 0) {
			visited[2 * x] = visited[x] + 1;
			parent[2 * x] = x;
			q.push(2 * x);
		}
	}

	printf("%d\n", visited[K] - 1);

	int i = K; path.push(K);
	while (parent[i] != -1) {
		path.push(parent[i]);
		i = parent[i];
	}

	while (!path.empty()) {
		printf("%d ", path.top());
		path.pop();
	}
	return 0;
}
