#include <stdio.h>
#include <queue>
using namespace std;

typedef struct {
	int to, cost;
}st;

struct comp {
	bool operator()(st a, st b) {
		return a.cost < b.cost;
	}
};
int N, M, s, e;
vector<st> graph[100001];
priority_queue<st, vector<st>, comp> pq;
bool used[100001];

int main() {
	int h1, h2, k;
	scanf("%d %d", &N, &M);
	scanf("%d %d", &s, &e);
	for (int i = 0; i < M; i++) {
		scanf("%d %d %d", &h1, &h2, &k);
		graph[h1].push_back({ h2, k });
		graph[h2].push_back({ h1, k });
	}

	used[s] = true;
	for (st x : graph[s]) pq.push(x);

	int ans = 1000001;
	bool found = false;
	while (!pq.empty()) {
		st t = pq.top(); pq.pop();
		if (used[t.to]) continue;
		used[t.to] = true;
		if (ans > t.cost) ans = t.cost;

		if (t.to == e) {
			found = true;
			break;
		}

		for (st x : graph[t.to]) {
			if (used[x.to]) continue;
			pq.push(x);
		}
	}

	if (!found) ans = 0;
	printf("%d", ans);
}
