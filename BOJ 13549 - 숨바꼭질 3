#include <stdio.h>
#include <queue>
using namespace std;
#define SIZE 100001

int visited[SIZE];
int N, K;
queue<int> q;

void BFS() {
	visited[N] = 1;
	q.push(N);
	while (!q.empty()) {
		int x = q.front(); q.pop();
		if (x == K) break;

		if (x > 0) {
			for (int i = x; i < SIZE; i = 2 * i) {
				if (visited[i] == 0) {
					visited[i] = visited[x];
					if (i == K) return;
					q.push(i);
				}
			}
		}

		if (x - 1 == K || x + 1 == K) {
			visited[K] = visited[x] + 1;
			return;
		}

		if (x - 1 >= 0 && visited[x - 1] == 0) {
			visited[x - 1] = visited[x] + 1;
			q.push(x - 1);
		}

		if (x + 1 < SIZE && visited[x + 1] == 0) {
			visited[x + 1] = visited[x] + 1;
			q.push(x + 1);
		}
	}
}

int main() {
	scanf("%d %d", &N, &K);

	BFS();

	printf("%d", visited[K] - 1);
	return 0;
}
