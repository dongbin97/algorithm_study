#include <stdio.h>
#include <algorithm>
using namespace std;

int N, num[10], arr[10], ans = 10000;
bool adj[10][10], v[10];

int dfs(int start, int team) {
	v[start] = true;
	int cnt = 1;

	for (int i = 0; i < N; i++) {
		if (v[i]) continue;
		if (adj[start][i] && arr[i] == team) {
			cnt += dfs(i, team);
		}
	}

	return cnt;
}

int main() {
	scanf("%d", &N);
	for (int i = 0; i < N; i++) scanf("%d", &num[i]);

	int cnt, x;
	for (int i = 0; i < N; i++) {
		scanf("%d", &cnt);
		for (int j = 0; j < cnt; j++) {
			scanf("%d", &x);
			adj[i][x - 1] = true;
		}
	}

	int total = 1 << N, team0, team1, sum0, sum1, diff, idx;
	for (int team = 1; team < total / 2; team++) {
		for (int i = 0; i < N; i++) {
			arr[i] = (team & (1 << i)) != 0;
			v[i] = false;
		}

		for (idx = 0; idx < N; idx++)
			if (arr[idx] == 0) break;
		team0 = dfs(idx, 0);

		for (idx = 0; idx < N; idx++)
			if (arr[idx] == 1) break;
		team1 = dfs(idx, 1);

		if (team0 + team1 == N) {
			sum0 = 0, sum1 = 0;
			for (int i = 0; i < N; i++) {
				if (arr[i] == 0) sum0 += num[i];
				else sum1 += num[i];
			}
			diff = abs(sum0 - sum1);
			if (ans > diff) ans = diff;
		}
	}

	if (ans == 10000) ans = -1;
	printf("%d", ans);
}
