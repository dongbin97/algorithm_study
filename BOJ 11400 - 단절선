#include <stdio.h>
#include <vector>
#include <algorithm>
using namespace std;
typedef pair<int, int> pii;

int V, E, dfn[100001], low[100001], num;
vector<int> graph[100001];
vector<pii> ans;

void dfnlow(int u, int prev) {
	dfn[u] = low[u] = num++;
	int child = 0;
	for (int x : graph[u]) {
		if (dfn[x] < 0) {
			child++;
			dfnlow(x, u);
			low[u] = min(low[u], low[x]);
			if (dfn[u] < low[x]) {
				if (u <= x)
					ans.push_back({ u,x });
				else
					ans.push_back({ x,u });
			}
		}
		else if (x != prev)
			low[u] = min(low[u], dfn[x]);
	}
}

int main() {
	int a, b;

	scanf("%d %d", &V, &E);
	for (int i = 0; i < E; i++) {
		scanf("%d %d", &a, &b);
		graph[a].push_back(b);
		graph[b].push_back(a);
	}

	for (int i = 1; i <= V; i++)
		dfn[i] = low[i] = -1;
	num = 1;

	dfnlow(1, -1);

	sort(ans.begin(), ans.end());

	printf("%d\n", ans.size());
	for (pii x : ans) 
		printf("%d %d\n", x.first, x.second);

	return 0;
}
