#include <stdio.h>
#include <vector>
#include <queue>
using namespace std;
#define SIZE 10000

int dx[4] = { 1,0,-1,0 }, dy[4] = { 0,1,0,-1 }; //up right down left
queue<pair<int,int> > q;
int visited[100][100] = { 0, };
int maze[100][100];
int N, M;

void BFS() {
	visited[0][0] = 1;
	q.push({ 0,0 });
	while (!q.empty()) {
		int row = q.front().first;
		int col = q.front().second;
		q.pop();
		
		int nrow, ncol;
		for (int i = 0; i < 4; i++) {
			nrow = row + dx[i];
			ncol = col + dy[i];
			if (0 <= nrow && nrow < N && 0 <= ncol && ncol < M && maze[nrow][ncol] == 1) {
				if (visited[nrow][ncol] > 0) continue;

				visited[nrow][ncol] = visited[row][col] + 1;
				if (nrow == N - 1 && ncol == M - 1)
					return;

				q.push({ nrow,ncol });
			}
		}
	}
	
}
int main() {
	scanf("%d %d", &N, &M);

	for (int i = 0; i < N; i++) 
		for (int j = 0; j < M; j++)
			scanf("%1d", &maze[i][j]);
	
	BFS();
	printf("%d", visited[N-1][M-1]);

	return 0;
}
