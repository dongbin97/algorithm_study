#include <stdio.h>
#include <vector>
#include <queue>
#include <algorithm>
using namespace std;

typedef struct {
	int x, y;
}coor;

int t, n;
vector<coor> point;
queue<int> q;
bool v[102];

int main() {
	int x, y;
	scanf("%d", &t);
	while (t--) {
		scanf("%d", &n);

		for (int i = 0; i < n + 2; i++) {
			scanf("%d %d", &x, &y);
			point.push_back({ x,y });
		}

		for (int i = 0; i < n + 2; i++) v[i] = false;

		q.push(0);
		while (!q.empty()) {
			int u = q.front(); q.pop();
			if (v[u]) continue;
			v[u] = true;
			if (u == n + 1) break;

			for (int i = 0; i < n + 2; i++) {
				if (v[i]) continue;
				int dist = abs(point[u].x - point[i].x) + abs(point[u].y - point[i].y);
				int beer = dist % 50 == 0 ? dist / 50 : dist / 50 + 1;
				if (beer <= 20) q.push(i);
			}
		}

		if (v[n + 1]) printf("happy\n");
		else printf("sad\n");

		while (!q.empty()) q.pop();
		point.clear();
	}
}
