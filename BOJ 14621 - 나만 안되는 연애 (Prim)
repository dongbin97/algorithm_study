#include <stdio.h>
#include <queue>
using namespace std;

typedef struct {
	int to, cost;
} st;

struct comp {
	bool operator()(st a, st b) {
		return a.cost > b.cost;
	}
};

int N, M;
vector<st> graph[1001];
priority_queue<st, vector<st>, comp> pq;
bool used[1001];
char gender[1001];

int main() {
	int u, v, w;
	scanf("%d %d", &N, &M);

	int cnt = 1;
	char ch;
	while (cnt <= N) {
		scanf("%c", &ch);
		if (ch == 'M' || ch == 'W') 
			gender[cnt++] = ch;
	}

	for (int i = 0; i < M; i++) {
		scanf("%d %d %d", &u, &v, &w);
		if (gender[u] == gender[v]) continue;
		graph[u].push_back({ v,w });
		graph[v].push_back({ u,w });
	}

	used[1] = true;
	for (st x : graph[1]) pq.push(x);

	cnt = 0;
	int cost = 0;
	while (cnt < N - 1 && !pq.empty()) {
		st e = pq.top(); pq.pop();
		if (used[e.to]) continue;
		used[e.to] = true;
		cnt++;
		cost += e.cost;

		for (st x : graph[e.to]) {
			if (used[x.to]) continue;
			pq.push(x);
		}
	}

	if (cnt < N - 1) cost = -1;
	printf("%d", cost);
}
