#include <stdio.h>
#include <queue>
using namespace std;

typedef struct {
	int r, c, block, day;
}st;

int N, M, K, map[1000][1000], v[1000][1000][11][2];
int dx[] = { -1,1,0,0 }, dy[] = { 0,0,-1,1 };
queue<st> q;

int bfs() {
	q.push({ 0,0,K,0 });
	v[0][0][K][0] = 1;
	
	while (!q.empty()) {
		st x = q.front(); q.pop();
		if (x.r == N - 1 && x.c == M - 1)
			return v[x.r][x.c][x.block][x.day];

		if (v[x.r][x.c][x.block][1 - x.day] == 0) {
			v[x.r][x.c][x.block][1 - x.day] = v[x.r][x.c][x.block][x.day] + 1;
			q.push({ x.r,x.c,x.block,1 - x.day });
		}

		for (int i = 0; i < 4; i++) {
			int nr = x.r + dx[i], nc = x.c + dy[i];
			if (nr < 0 || nr >= N || nc < 0 || nc >= M) continue;

			if (x.day == 0 && map[nr][nc] == 1 && x.block > 0 && v[nr][nc][x.block - 1][1 - x.day] == 0) {
				v[nr][nc][x.block - 1][1 - x.day] = v[x.r][x.c][x.block][x.day] + 1;
				q.push({ nr,nc, x.block - 1,1 - x.day });
			}
			else if (map[nr][nc] == 0 && v[nr][nc][x.block][1 - x.day] == 0) {
				v[nr][nc][x.block][1 - x.day] = v[x.r][x.c][x.block][x.day] + 1;
				q.push({ nr,nc, x.block,1 - x.day });
			}
		}
	}

	return -1;
}

int main() {
	scanf("%d %d %d", &N, &M, &K);
	for (int i = 0; i < N; i++)
		for (int j = 0; j < M; j++)
			scanf("%1d", &map[i][j]);

	printf("%d", bfs());
}
