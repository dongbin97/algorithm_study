#include <stdio.h>
#include <queue>
using namespace std;

typedef struct {
	int to, cost;
} st;

struct comp {
	bool operator()(st a, st b) {
		return a.cost > b.cost;
	}
};

int V, E;
vector<st> graph[10001];
priority_queue<st, vector<st>, comp> pq;
bool used[10001];

int main() {
	int A, B, C;
	scanf("%d %d", &V, &E);

	for (int i = 0; i < E; i++) {
		scanf("%d %d %d", &A, &B, &C);
		graph[A].push_back({ B,C });
		graph[B].push_back({ A,C });
	}

	used[1] = true;
	for (st x : graph[1])
		pq.push(x);

	int cnt = 0, cost = 0;
	while (cnt < V - 1) {
		st e = pq.top(); pq.pop();
		if (used[e.to]) continue;
		used[e.to] = true;
		cnt++;
		cost += e.cost;

		for (st x : graph[e.to]) {
			if (used[x.to]) continue;
			pq.push(x);
		}
	}

	printf("%d", cost);
}
