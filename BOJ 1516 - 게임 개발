#include <stdio.h>
#include <vector>
#include <queue>
#include <algorithm>
using namespace std;

int in_degree[501];
int cost[501], time[501];
vector<int> graph[501];
queue<int> q;

int main() {
	int N, p;
	scanf("%d", &N);

	for (int i = 1; i <= N; i++) {
		scanf("%d", &cost[i]);
		while (1) {
			scanf("%d", &p);
			if (p == -1) break;
			graph[p].push_back(i);
			in_degree[i]++;
		}
	}
	
	for (int i = 1; i <= N; i++) {
		time[i] = cost[i];
		if (in_degree[i] == 0) q.push(i);
	}

	while (!q.empty()) {
		int u = q.front(); q.pop();

		for (auto x : graph[u]) {
			time[x] = max(time[x], cost[x] + time[u]);
			in_degree[x]--;
			if (in_degree[x] == 0) 
				q.push(x);
		}
	}

	for (int i = 1; i <= N; i++)
		printf("%d\n", time[i]);

	return 0;
}
