#include <string>
#include <vector>
#include <map>
#include <queue>
using namespace std;
typedef pair<int,int> pii;

struct comp{
    bool operator()(pii a, pii b){
        if(a.first == b.first) return a.second > b.second;
        else return a.first < b.first;
    }
};

vector<int> solution(vector<string> genres, vector<int> plays) {
    vector<int> answer;
    map<string,int> id;
    map<int,int> playNum;
    priority_queue<pii, vector<pii>, comp> total, song[100];
    
    int idx = 0;
    int sz = genres.size();
    for(int i = 0; i < sz; i++){
        if(id.find(genres[i]) == id.end())
            id[genres[i]] = idx++;
        playNum[id[genres[i]]] += plays[i];
        song[id[genres[i]]].push({plays[i], i});
    }
    
    for(auto x:playNum)
        total.push({x.second, x.first});
        
    
    
    while(!total.empty()){
        pii x = total.top(); total.pop();
        if(song[x.second].size() < 2) answer.push_back(song[x.second].top().second);
        else {
            answer.push_back(song[x.second].top().second); song[x.second].pop();
            answer.push_back(song[x.second].top().second);
        }
    }
    
    return answer;
}
