#include <stdio.h>
#include <queue>
using namespace std;

int N, map[20][20], ans = 0;

void recur(int dir, int cnt) {
	if (cnt == 5) {
		for (int i = 0; i < N; i++)
			for (int j = 0; j < N; j++)
				if (ans < map[i][j])
					ans = map[i][j]; 
		return;
	}

	queue<int> q[20];
	
	if (dir == 0) { //상
		for (int j = 0; j < N; j++) {
			for (int i = 0; i < N; i++) {
				if (map[i][j] != 0)
					q[j].push(map[i][j]);
			}

			int idx = 0;
			while (idx < N) {
				if (q[j].empty()) map[idx][j] = 0;
				else {
					int x = q[j].front(); q[j].pop();
					if (q[j].empty() || x != q[j].front())
						map[idx][j] = x;
					else {
						map[idx][j] = 2 * x;
						q[j].pop();
					}
				}
				idx++;
			}
		}
	}
	else if (dir == 1) { //하
		for (int j = 0; j < N; j++) {
			for (int i = N-1; i>=0; i--) {
				if (map[i][j] != 0)
					q[j].push(map[i][j]);
			}

			int idx = N-1;
			while (idx >=0) {
				if (q[j].empty()) map[idx][j] = 0;
				else {
					int x = q[j].front(); q[j].pop();
					if (q[j].empty() || x != q[j].front())
						map[idx][j] = x;
					else {
						map[idx][j] = 2 * x;
						q[j].pop();
					}
				}
				idx--;
			}
		}
	}
	else if (dir == 2) { //좌
		for (int i = 0; i < N; i++) {
			for (int j = 0; j < N;j++) {
				if (map[i][j] != 0)
					q[i].push(map[i][j]);
			}

			int idx = 0;
			while (idx < N) {
				if (q[i].empty()) map[i][idx] = 0;
				else {
					int x = q[i].front(); q[i].pop();
					if (q[i].empty() || x != q[i].front())
						map[i][idx] = x;
					else {
						map[i][idx] = 2 * x;
						q[i].pop();
					}
				}
				idx++;
			}
		}
	}
	else { //우
		for (int i = 0; i < N; i++) {
			for (int j = N-1; j >=0; j--) {
				if (map[i][j] != 0)
					q[i].push(map[i][j]);
			}

			int idx = N-1;
			while (idx >= 0) {
				if (q[i].empty()) map[i][idx] = 0;
				else {
					int x = q[i].front(); q[i].pop();
					if (q[i].empty() || x != q[i].front())
						map[i][idx] = x;
					else {
						map[i][idx] = 2 * x;
						q[i].pop();
					}
				}
				idx--;
			}
		}
	}

	int temp[20][20];

	for (int i = 0; i < N; i++)
		for (int j = 0; j < N; j++)
			temp[i][j] = map[i][j];

	for (int d = 0; d < 4; d++) {
		for (int i = 0; i < N; i++)
			for (int j = 0; j < N; j++)
				map[i][j] = temp[i][j];

		recur(d, cnt + 1);
	}
}

int main() {
	scanf("%d", &N);
	int temp[20][20];

	for (int i = 0; i < N; i++) {
		for (int j = 0; j < N; j++) {
			scanf("%d", &map[i][j]);
			temp[i][j] = map[i][j];
		}
	}

	for (int d = 0; d < 4; d++) {
		for (int i = 0; i < N; i++) 
			for (int j = 0; j < N; j++) 
				map[i][j] = temp[i][j];

		recur(d, 0);
	}

	printf("%d", ans);
}
