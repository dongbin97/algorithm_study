#include <stdio.h>
#include <vector>
#include <queue>
#include <algorithm>
using namespace std;
#define INF 2000000000
typedef struct {
	int to, cost;
}st;

bool operator<(st a, st b) {
	return a.cost > b.cost;
}

vector<st> graph[1001];
vector<int> dist[1001];
int cnt[1001] = { 0, };

int main() {
	int n, m, k, a, b, c;
	scanf("%d %d %d", &n, &m, &k);
	for (int i = 0; i < m; i++) {
		scanf("%d %d %d", &a, &b, &c);
		graph[a].push_back({ b,c });
	}

	priority_queue<st> pq;

	pq.push({ 1,0 });
	while (!pq.empty()) {
		st u = pq.top(); pq.pop();
		dist[u.to].push_back(u.cost);
		cnt[u.to]++;
	
		for (st x : graph[u.to]) {
			if (cnt[x.to] >= k) continue;
			pq.push({ x.to, u.cost + x.cost });
		}
	}

	for (int j = 1; j <= n; j++) {
		if (dist[j].size() < k)
			printf("-1\n");
		else printf("%d\n", dist[j][k - 1]);
	}
	return 0;
}
