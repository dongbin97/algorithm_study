#include <stdio.h>
#include <algorithm>
using namespace std;
#define INF 1000000

int N, M, arr[1000][1000], dp[1000][1000][3];

int main() {
	scanf("%d %d", &N, &M);
	for (int i = 0; i < N; i++)
		for (int j = 0; j < M; j++)
			scanf("%d", &arr[i][j]);

	for (int i = 0; i < M; i++)
		for (int j = 0; j < 3; j++)
			dp[0][i][j] = arr[0][i];

	for (int i = 1; i < N; i++) {
		dp[i][0][0] = INF;
		dp[i][0][1] = arr[i][0] + min(dp[i - 1][0][0], dp[i - 1][0][2]);
		dp[i][0][2] = arr[i][0] + min(dp[i - 1][1][0], dp[i - 1][1][1]);

		for (int j = 1; j < M - 1; j++) {
			dp[i][j][0] = arr[i][j] + min(dp[i - 1][j - 1][1], dp[i - 1][j - 1][2]);
			dp[i][j][1] = arr[i][j] + min(dp[i - 1][j][0], dp[i - 1][j][2]);
			dp[i][j][2] = arr[i][j] + min(dp[i - 1][j + 1][0], dp[i - 1][j + 1][1]);
		}

		dp[i][M - 1][0] = arr[i][M - 1] + min(dp[i - 1][M - 2][1], dp[i - 1][M - 2][2]);
		dp[i][M - 1][1] = arr[i][M - 1] + min(dp[i - 1][M - 1][0], dp[i - 1][M - 1][2]);
		dp[i][M - 1][2] = INF;
	}

	int ans = INF;
	for (int i = 0; i < M; i++)
		for (int j = 0; j < 3; j++)
			if (ans > dp[N - 1][i][j])
				ans = dp[N - 1][i][j];

	printf("%d", ans);
}
