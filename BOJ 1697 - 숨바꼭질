#include <stdio.h>
#include <queue>
using namespace std;

#define INF 100001

int N, K, dp[INF];
queue<int> q;

int main() {
	scanf("%d %d", &N, &K);

	if (N == K) dp[K] = 0;
	else {
		for (int i = 0; i < INF; i++) dp[i] = INF;
		bool found = false;

		dp[N] = 0;
		q.push(N);
		while (!found) {
			int x = q.front(); q.pop();

			if (x == K) {
				found = true;
				break;
			}

			if (x + 1 < INF && dp[x] + 1 < dp[x + 1]) {
				dp[x + 1] = dp[x] + 1;
				q.push(x + 1);
			}

			if (x - 1 >= 0 && dp[x] + 1 < dp[x - 1]) {
				dp[x - 1] = dp[x] + 1;
				q.push(x - 1);
			}

			if (2 * x < INF && dp[x] + 1 < dp[2 * x]) {
				dp[2 * x] = dp[x] + 1;
				q.push(2 * x);
			}
		}
	}

	printf("%d", dp[K]);
}
