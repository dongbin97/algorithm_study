#include <stdio.h>
#include <algorithm>
using namespace std;

int num[1000];
int dp[1000][1000];

int recur(int start, int end) {
	if (start > end) return 0;
	if (start == end) return num[start];
	if (dp[start][end] > 0) return dp[start][end];
	if (start + 1 == end) {
		dp[start][end] = max(num[start], num[end]);
		return dp[start][end];
	}
	
	dp[start][end] = num[start] + min(recur(start + 2, end), recur(start + 1, end - 1));
	dp[start][end] = max(dp[start][end], num[end] + min(recur(start, end - 2), recur(start + 1, end - 1)));
	return dp[start][end];
}

int main() {
	int T, N;
	scanf("%d", &T);
	while (T--) {
		scanf("%d", &N);
		for (int i = 0; i < N; i++)
			scanf("%d", &num[i]);

		printf("%d\n", recur(0, N - 1));

		for (int i = 0; i < N; i++)
			for (int j = 0; j < N; j++)
				dp[i][j] = 0;
	}
	return 0;
}
