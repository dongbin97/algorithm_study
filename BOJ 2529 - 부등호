#include <stdio.h>

int k, ans[10];
char ineq[9];
bool used[10], found;

void large(int num, int pos) {
	if (found) return;

	used[num] = true;
	ans[pos] = num;

	if (pos >= k) {
		for (int i = 0; i <= k; i++)
			printf("%d", ans[i]);
		found = true;
		return;
	}

	if (ineq[pos] == '<') {
		for (int i = num + 1; i < 10; i++) {
			if (used[i]) continue;
			large(i, pos + 1);
		}
	}
	else if (ineq[pos] == '>') {
		for (int i = num - 1; i >= 0; i--) {
			if (used[i]) continue;
			large(i, pos + 1);
		}
	}

	used[num] = false;
}

void small(int num, int pos) {
	if (found) return;

	used[num] = true;
	ans[pos] = num;

	if (pos >= k) {
		for (int i = 0; i <= k; i++)
			printf("%d", ans[i]);
		found = true;
		return;
	}

	if (ineq[pos] == '<') {
		for (int i = num + 1; i < 10; i++) {
			if (used[i]) continue;
			small(i, pos + 1);
		}
	}
	else if (ineq[pos] == '>') {
		for (int i = num - 1; i >= 0; i--) {
			if (used[i]) continue;
			small(i, pos + 1);
		}
	}

	used[num] = false;
}

int main() {
	scanf("%d", &k);

	int cnt = 0;
	char ch;
	while (cnt < k) {
		scanf("%c", &ch);
		if (ch == '<' || ch == '>')
			ineq[cnt++] = ch;
	}

	found = false;
	for (int i = 9; i >= 0; i--)
		large(i, 0);

	for (int i = 0; i < 10; i++) used[i] = false;
	found = false;
	printf("\n");
	for (int i = 0; i < 10; i++) 
		small(i, 0);
	
}
