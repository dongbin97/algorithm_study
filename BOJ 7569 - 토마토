#include <stdio.h>
#include <queue>
using namespace std;

typedef struct {
	int r, c, h;
}coor;

int N, M, H, box[100][100][100],ans, total, cnt;
int dx[] = { -1,1,0,0,0,0 }, dy[] = { 0,0,-1,1,0,0 }, dz[] = { 0,0,0,0,-1,1 };
int v[100][100][100];
queue<coor> q;

int main() {
	scanf("%d %d %d", &M, &N, &H);

	total = H * N * M;
	for (int i = 0; i < H; i++) {
		for (int j = 0; j < N; j++) {
			for (int k = 0; k < M; k++) {
				scanf("%d", &box[i][j][k]);
				if (box[i][j][k] == 1) {
					v[i][j][k] = 1;
					q.push({ j,k,i});
					ans = 1;
				}
				else if (box[i][j][k] == -1) total--;
			}
		}
	}

	cnt = 0;
	while (!q.empty()) {
		coor x = q.front(); q.pop(); 
		if (ans < v[x.h][x.r][x.c]) ans = v[x.h][x.r][x.c];
		cnt++;

		for (int i = 0; i < 6; i++) {
			int nr = x.r + dx[i], nc = x.c + dy[i], nh = x.h + dz[i];
			if (nr < 0 || nr >= N || nc < 0 || nc >= M || nh < 0 || nh >= H) continue;
			if (v[nh][nr][nc] > 0 || box[nh][nr][nc] == -1) continue;

			v[nh][nr][nc] = v[x.h][x.r][x.c] + 1;
			q.push({ nr,nc,nh });
		}
	}
		
	if (cnt < total) ans = -1;
	else ans--;

	printf("%d", ans);
}
