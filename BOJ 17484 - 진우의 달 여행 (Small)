#include <stdio.h>
#include <algorithm>
using namespace std;

int N, M, arr[6][6], dp[6][6][3];

int main() {
	scanf("%d %d", &N, &M);
	for (int i = 0; i < N; i++)
		for (int j = 0; j < M; j++)
			scanf("%d", &arr[i][j]);

	for (int j = 0; j < M; j++) 
		dp[0][j][0] = dp[0][j][1] = dp[0][j][2] = arr[0][j];
		
	dp[0][0][0] = 1000;
	dp[0][M - 1][2] = 1000;

	for (int i = 1; i < N; i++) {
		dp[i][0][0] = 1000;
		dp[i][0][1] = min(dp[i - 1][0][0], dp[i - 1][0][2]) + arr[i][0];
		dp[i][0][2] = min(dp[i - 1][1][0], dp[i - 1][1][1]) + arr[i][0];

		for (int j = 1; j < M - 1; j++) {
			dp[i][j][0] = min(dp[i - 1][j - 1][1], dp[i - 1][j - 1][2]) + arr[i][j];
			dp[i][j][1] = min(dp[i - 1][j][0], dp[i - 1][j][2]) + arr[i][j];
			dp[i][j][2] = min(dp[i - 1][j + 1][0], dp[i - 1][j + 1][1]) + arr[i][j];
		}

		dp[i][M - 1][0] = min(dp[i - 1][M - 2][1], dp[i - 1][M - 2][2]) + arr[i][M - 1];
		dp[i][M - 1][1] = min(dp[i - 1][M - 1][0], dp[i - 1][M - 1][2]) + arr[i][M - 1];
		dp[i][M - 1][2] = 1000;
	}

	int ans = 1000;
	for (int j = 0; j < M; j++) {
		for (int k = 0; k < 3; k++)
			if (ans > dp[N - 1][j][k])
				ans = dp[N - 1][j][k];
	}

	printf("%d", ans);
}
