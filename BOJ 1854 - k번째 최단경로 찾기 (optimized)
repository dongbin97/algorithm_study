#include <stdio.h>
#include <vector>
#include <queue>
using namespace std;
#define INF 2000000000

typedef struct {
	int to, cost;
}st;

bool operator<(st a, st b) {
	return a.cost > b.cost;
}

int n, m, k, a, b, c;
vector<st> graph[1001];
priority_queue<st> pq;
priority_queue<int> dist[1001];

int main() {
	scanf("%d %d %d", &n, &m, &k);

	for (int i = 0; i < m; i++) {
		scanf("%d %d %d", &a, &b, &c);
		graph[a].push_back({ b,c });
	}

	dist[1].push(0);
	pq.push({ 1,0 });

	while (!pq.empty()) {
		st u = pq.top(); pq.pop();
		for (st x : graph[u.to]) {
			if (dist[x.to].size() < k) {
				dist[x.to].push(u.cost + x.cost);
				pq.push({ x.to,u.cost + x.cost });
			}
			else {
				if (dist[x.to].top() > u.cost + x.cost) {
					dist[x.to].pop();
					dist[x.to].push(u.cost + x.cost);
					pq.push({ x.to,u.cost + x.cost });
				}
			}
		}
	}

	for (int i = 1; i <= n; i++) {
		if (dist[i].size() < k) printf("-1\n");
		else printf("%d\n", dist[i].top());
	}

	return 0;
}
