#include <stdio.h>
#include <vector>
#include <queue>
using namespace std;
#define MAX 20001

vector<int> graph[MAX];
queue<int> q;
int visited[MAX] = { 0, };

bool BFS() {
	int u, size, x;
	while (!q.empty()) {
		u = q.front(); q.pop();
		size = graph[u].size();
		for (int i = 0; i < size; i++) {
			x = graph[u][i];
			if (visited[x] == visited[u]) return false;
			else if (visited[x] > 0) continue;

			visited[x] = (visited[u] == 1) ? 2 : 1;
			q.push(x);
		}
	}
	return true;
}

int main() {
	int K, V, E, a, b, i;
	scanf("%d", &K);
	while (K--) {
		scanf("%d %d", &V, &E);

		for (i = 0; i < E; i++) {
			scanf("%d %d", &a, &b);
			graph[a].push_back(b);
			graph[b].push_back(a);
		}

		for (i = 1; i <= V; i++) {
			if (visited[i] == 0) {
				visited[i] = 1;
				q.push(i);
				if (!BFS()) break;
			}
		}

		if (i == V + 1) printf("YES\n");
		else printf("NO\n");

		for (i = 1; i <= V; i++) {
			graph[i].clear();
			visited[i] = 0;
		}	

		while (!q.empty())
			q.pop();
	}

	return 0;
}
