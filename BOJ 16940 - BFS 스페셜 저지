#include <stdio.h>
#include <vector>
#include <queue>
using namespace std;
#define SIZE 100001

vector<int> graph[SIZE];
int visited[SIZE];
queue<pair<int,int> > q;

int main() {
	int N, a, b, order[SIZE];
	scanf("%d", &N);

	for (int i = 0; i < N - 1; i++) {
		scanf("%d %d", &a, &b);
		graph[a].push_back(b);
		graph[b].push_back(a);
	}

	for (int i = 1; i <= N; i++)
		scanf("%d", &order[i]);

	if (order[1] != 1) {
		printf("0");
		return 0;
	}

	int idx = 1, parent = -1;
	visited[order[idx]] = parent;
	q.push({ parent,order[idx] });
	while (!q.empty()) {
		parent = q.front().first;
		int u = q.front().second; q.pop();
		if (visited[u] != parent) {
			printf("0");
			return 0;
		}

		int size = graph[u].size();
		for (int i = 0; i < size; i++) {
			int x = graph[u][i];
			if (visited[x] != 0) continue;

			visited[x] = u;
			q.push({ u,order[++idx] });
		}
	}
	
	printf("1");
	return 0;
}
