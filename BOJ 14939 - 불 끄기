#include <stdio.h>
#include <algorithm>
using namespace std;

int map[10][10], temp[10][10];
int dx[] = { -1,1,0,0 }, dy[] = { 0,0,-1,1 };
char board[10][11];

void flip(int row, int col) {
	temp[row][col] = 1 - temp[row][col];
	for (int i = 0; i < 4; i++) {
		int nrow = row + dx[i], ncol = col + dy[i];
		if (nrow < 0 || nrow >= 10 || ncol < 0 || ncol >= 10) continue;
		temp[nrow][ncol] = 1 - temp[nrow][ncol];
	}
}

int main() {
	for (int i = 0; i < 10; i++) {
		scanf("%s", board[i]);
		for (int j = 0; j < 10; j++) {
			if (board[i][j] == '#') map[i][j] = 0;
			else map[i][j] = 1;
		}
	}

	int fin = 1 << 10;
	int ans = 101, cnt;
	for (int t = 0; t < fin; t++) {
		for (int i = 0; i < 10; i++)
			for (int j = 0; j < 10; j++)
				temp[i][j] = map[i][j];

		cnt = 0;
		for (int bit = 0; bit < 10; bit++) {
			if (t & (1 << bit)) {
				flip(0, bit);
				cnt++;
			}
		}

		bool possible = true;
		for (int i = 1; i < 10; i++) {
			for (int j = 0; j < 10; j++) {
				if (temp[i - 1][j] == 1) {
					flip(i, j);
					cnt++;
				}
			}
		}

		for (int j = 0; j < 10; j++) {
			if (temp[9][j] == 1) {
				possible = false;
				break;
			}
		}

		if (possible) 
			ans = min(ans, cnt);
	}

	if (ans > 100) ans = -1;
	printf("%d", ans);
}
