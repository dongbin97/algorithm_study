#include <stdio.h>
#include <queue>
using namespace std;

typedef struct {
	int to;
	long long cost;
} st;

struct comp {
	bool operator()(st a, st b) {
		return a.cost > b.cost;
	}
};

int N, M;
long long map[1000][1000];
vector<st> graph[1000];
priority_queue<st, vector<st>, comp> pq;
bool used[1001];

int main() {
	scanf("%d", &N);

	for (int i = 0; i < N; i++)
		for (int j = 0; j < N; j++)
			scanf("%lld", &map[i][j]);

	for (int i = 0; i < N - 1; i++) {
		for (int j = i + 1; j < N; j++) {
			graph[i].push_back({ j,map[i][j] });
			graph[j].push_back({ i,map[j][i] });
		}
	}

	used[0] = true;
	for (st x : graph[0]) pq.push(x);

	int cnt = 0;
	long long cost = 0;
	while (cnt < N - 1) {
		st e = pq.top(); pq.pop();
		if (used[e.to]) continue;
		used[e.to] = true;
		cnt++;
		cost += e.cost;

		for (st x : graph[e.to]) {
			if (used[x.to]) continue;
			pq.push(x);
		}
	}

	printf("%lld", cost);
}
