#include <stdio.h>
#include <queue>
using namespace std;

typedef struct {
	int to, cost;
} st;

struct comp {
	bool operator()(st a, st b) {
		return a.cost > b.cost;
	}
};

int N, M, K;
vector<st> graph[1001];
vector<int> plant;
priority_queue<st, vector<st>, comp> pq;
bool used[1001];

int main() {
	int u, v, w;
	scanf("%d %d %d", &N, &M, &K);

	for (int i = 0; i < K; i++) {
		scanf("%d", &u);
		plant.push_back(u);
	}

	for (int i = 0; i < M; i++) {
		scanf("%d %d %d", &u, &v, &w);
		graph[u].push_back({ v,w });
		graph[v].push_back({ u,w });
	}

	int cnt = 0;
	for (int i : plant) {
		used[i] = true;
		cnt++;
		for (st x : graph[i]) {
			if (used[x.to]) continue;
			pq.push(x);
		}
	}

	int cost = 0;
	while (cnt < N) {
		st e = pq.top(); pq.pop();
		if (used[e.to]) continue;
		used[e.to] = true;
		cnt++;
		cost += e.cost;

		for (st x : graph[e.to]) {
			if (used[x.to]) continue;
			pq.push(x);
		}
	}

	printf("%d", cost);
}
