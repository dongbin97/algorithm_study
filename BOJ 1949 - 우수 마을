#include <stdio.h>
#include <vector>
#include <algorithm>
using namespace std;

int N, arr[10001], dp[10001];
vector<int> graph[10001];

int recur(int prev, int n) {
	if (dp[n] > 0) return dp[n];

	int res1 = arr[n], res2 = 0;
	for (int x : graph[n]) {
		if (x == prev) continue;
		res2 += recur(n,x);
		for (int y : graph[x]) {
			if (y == n) continue;
			res1 += recur(x, y);
		}
	}
		
	dp[n] = max(res1, res2);

	return dp[n];
}

int main() {
	scanf("%d", &N);
	for (int i = 1; i <= N; i++) 
		scanf("%d", &arr[i]);

	int x, y;
	for (int i = 0; i < N - 1; i++) {
		scanf("%d %d", &x, &y);
		graph[x].push_back(y);
		graph[y].push_back(x);
	}

	printf("%d", recur(-1, 1));
}
