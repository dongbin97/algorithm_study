#include <stdio.h>
#include <queue>
using namespace std;
#define INF 1000000

typedef struct {
	int to, cost;
}st;

struct comp {
	bool operator()(st a, st b) {
		return a.cost > b.cost;
	}
};

int N, M, K, X, dist[300001];
vector<st> graph[300001];
priority_queue<st, vector<st>, comp> pq;

int main() {
	int A, B;
	scanf("%d %d %d %d", &N, &M, &K, &X);
	for (int i = 0; i < M; i++) {
		scanf("%d %d", &A, &B);
		graph[A].push_back({ B,1 });
	}

	for (int i = 1; i <= N; i++) 
		dist[i] = INF;

	dist[X] = 0;
	pq.push({ X,dist[X] });

	while (!pq.empty()) {
		st e = pq.top(); pq.pop();

		for (st x : graph[e.to]) {
			if (dist[x.to] > x.cost + e.cost) {
				dist[x.to] = x.cost + e.cost;
				pq.push({ x.to, dist[x.to] });
			}
		}
	}

	int cnt = 0;
	for (int i = 1; i <= N; i++) {
		if (dist[i] == K) {
			printf("%d\n", i);
			cnt++;
		}
	}

	if (cnt == 0) printf("-1");
}
