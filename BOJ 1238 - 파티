#include <stdio.h>
#include <queue>
using namespace std;
#define INF 100001

typedef struct {
	int to, cost;
}st;

struct comp {
	bool operator()(st a, st b) {
		return a.cost > b.cost;
	}
};

int N, M, X, dist[1001][1001];
vector<st> graph[1001];
priority_queue<st, vector<st>, comp> pq;

int main() {
	int a, b, c;
	scanf("%d %d %d", &N, &M, &X);

	for (int i = 1; i <= N; i++) 
		for (int j = 1; j <= N; j++) 
				dist[i][j] = INF;

	for (int i = 0; i < M; i++) {
		scanf("%d %d %d", &a, &b, &c);
		graph[a].push_back({ b,c });
	}

	for (int i = 1; i <= N; i++) {
		dist[i][i] = 0;
		pq.push({ i,0 });

		while (!pq.empty()) {
			st e = pq.top(); pq.pop();

			for (st x : graph[e.to]) {
				if (dist[i][x.to] > x.cost + e.cost) {
					dist[i][x.to] = x.cost + e.cost;
					pq.push({ x.to,dist[i][x.to] });
				}
			}
		}
	}
			
	int ans = 0;
	for (int i = 0; i <= N; i++) {
		if (ans < dist[i][X] + dist[X][i])
			ans = dist[i][X] + dist[X][i];
	}
	
	printf("%d", ans);
}
