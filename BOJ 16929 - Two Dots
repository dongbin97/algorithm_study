#include <stdio.h>
#include <stdlib.h>
#include <vector>
#include <queue>
using namespace std;

int dx[4] = { 1,0,-1,0 }, dy[4] = { 0,1,0,-1 }; //down rigth up left
bool visited[50][50] = { false, };
int N, M;
char** dots;

bool DFS(int prev_row, int prev_col, int row,int col) {
	visited[row][col] = true;

	int nrow, ncol;
	for (int i = 0; i < 4; i++) {
		nrow = row + dx[i];
		ncol = col + dy[i];

		if (nrow == prev_row && ncol == prev_col) continue;

		if (0 <= nrow && nrow < N && 0 <= ncol && ncol < M && dots[row][col] == dots[nrow][ncol]) {
			if (visited[nrow][ncol] == true) return true;
			if (DFS(row, col, nrow, ncol)) return true;
		}
	}
	return false;
}

int main() {
	
	scanf("%d %d", &N, &M);

	dots = (char**)malloc(sizeof(char*) * N);
	for (int i = 0; i < N; i++)
		dots[i] = (char*)malloc(sizeof(char) * M);

	for (int i = 0; i < N; i++)
		scanf("%s", dots[i]);

	bool flag = false;
	for (int i = 0; i < N && flag == false; i++) {
		for (int j = 0; j < M && flag == false; j++) {
			if (!visited[i][j])
				flag = DFS(-1, -1, i, j);
		}
	}

	if (flag) printf("Yes");
	else printf("No");

	return 0;
}
