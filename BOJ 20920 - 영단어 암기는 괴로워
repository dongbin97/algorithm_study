#include <iostream>
#include <string>
#include <unordered_map>
#include <queue>
using namespace std;

typedef struct {
	string str;
	int cnt;
}st;

struct comp {
	bool operator()(st a, st b) {
		if (a.cnt == b.cnt) {
			if (a.str.size() == b.str.size()) {
				return a.str.compare(b.str) > 0;
			}
			else return a.str.size() < b.str.size();
		}
		else return a.cnt < b.cnt;
	}
};


int N, M;
string str;
unordered_map<string, int> m;
priority_queue<st, vector<st>, comp> pq;

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	cin >> N >> M;
	for (int i = 0; i < N; i++) {
		cin >> str;
		if (str.size() < M) continue;
		m[str]++;
	}

	for (auto x : m) 
		pq.push({ x.first, x.second });
	
	while (!pq.empty()) {
		cout << pq.top().str << "\n";
		pq.pop();
	}
}
