#include <stdio.h>
#include <vector>
using namespace std;

typedef struct {
	int to, cost;
}st;

int n, dist[10001];
vector<st> graph[10001];
bool v[10001];

void dfs(int u, int cost) {
	v[u] = true;
	dist[u] = cost;

	for (st x : graph[u]) {
		if (v[x.to]) continue;
		dfs(x.to, cost + x.cost);
	}

	v[u] = false;
}

int main() {
	int X, Y, C;
	scanf("%d", &n);
	for (int i = 0; i < n - 1; i++) {
		scanf("%d %d %d", &X, &Y, &C);
		graph[X].push_back({ Y,C });
		graph[Y].push_back({ X,C });
	}

	dfs(1, 0);

	int max = dist[1], pos = 1;
	for (int i = 2; i <= n; i++) {
		if (max < dist[i]) {
			max = dist[i];
			pos = i;
		}
	}

	for (int i = 1; i <= n; i++) dist[i] = 0;

	dfs(pos, 0);

	int ans = 0;
	for (int i = 1; i <= n; i++)
		if (ans < dist[i])
			ans = dist[i];
		
	printf("%d", ans);
}

