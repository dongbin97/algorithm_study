#include <stdio.h>
#include <vector>
#include <queue>
using namespace std;

typedef pair<int, int> pii;

struct comp {
	bool operator() (pii a, pii b) {
		return a.second > b.second;
	}
};

vector<pii> graph[1001];
bool visited[1001];
priority_queue < pii, vector<pii>, comp>  pq;

int main() {
	int N, M, a, b, c;
	scanf("%d %d", &N, &M);
	for (int i = 0; i < M; i++) {
		scanf("%d %d %d", &a, &b, &c);
		graph[a].push_back({ b,c });
		graph[b].push_back({ a,c });
	}

	int cnt = 1, ans = 0;
	visited[1] = 1;
	int size = graph[1].size();
	for (int i = 0; i < size; i++)
		pq.push(graph[1][i]);

	while (cnt < N) {
		int u = pq.top().first; 
		int cost = pq.top().second; pq.pop();
		if (visited[u]) continue;
		visited[u] = true;
		cnt++;
		ans += cost;

		size = graph[u].size();
		for (int i = 0; i < size; i++) {
			int x = graph[u][i].first;
			if (visited[x]) continue;
			pq.push(graph[u][i]);
		}
	}
	
	printf("%d", ans);
	return 0;
}
