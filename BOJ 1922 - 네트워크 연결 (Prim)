#include <stdio.h>
#include <vector>
#include <queue>
using namespace std;
typedef struct {
	int to, cost;
}e;

struct comp {
	bool operator()(e a, e b) {
		return a.cost > b.cost;
	}
};

bool used[1001];
vector<e> graph[1001];
priority_queue<e, vector<e>, comp> pq;

int main() {
	int N, M, from, to, cost;
	scanf("%d %d", &N, &M);
	for (int i = 0; i < M; i++) {
		scanf("%d %d %d", &from, &to, &cost);
		graph[from].push_back({ to,cost });
		graph[to].push_back({ from,cost });
	}

	used[1] = true;
	int cnt = 1, ans = 0, u = 1;
	for (auto x : graph[u]) pq.push(x);

	while (cnt < N) {
		e v = pq.top(); pq.pop();
		if (used[v.to]) continue;
		used[v.to] = true;
		ans += v.cost;
		cnt++;

		for (auto x : graph[v.to]) {
			if (used[x.to]) continue;
			pq.push(x);
		}
	}

	printf("%d", ans);
	return 0;
}
